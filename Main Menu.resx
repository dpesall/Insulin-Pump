<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        gg==
</value>
  </data>
</root>